# adapted from:
# - https://github.com/matplotlib/matplotlib/blob/master/.github/workflows/cibuildwheel.yml
# - https://github.com/scikit-image/scikit-image/blob/master/.github/workflows/cibuildwheel.yml

name: Build CI wheels

on:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      # - name: Build wheels for CPython 3.9 and Mac OS
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     brew install libomp
      #     python -m cibuildwheel --output-dir dist
      #   env:
      #     CIBW_BUILD: "cp39-*"
      #     CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      #     CIBW_MANYLINUX_I686_IMAGE: manylinux1
      #     # CIBW_BEFORE_BUILD: pip install certifi numpy==1.19.3
      #     CC: /usr/bin/clang
      #     CXX: /usr/bin/clang++
      #     CPPFLAGS: "-Xpreprocessor -fopenmp"
      #     CFLAGS: "-Wno-implicit-function-declaration -I/usr/local/opt/libomp/include"
      #     CXXFLAGS: "-I/usr/local/opt/libomp/include"
      #     LDFLAGS: "-Wl,-rpath,/usr/local/opt/libomp/lib -L/usr/local/opt/libomp/lib -lomp"
      #     # CIBW_TEST_REQUIRES: pytest pooch pytest-localserver pytest-faulthandler
      #     # CIBW_TEST_COMMAND: pytest --pyargs skimage

      # - name: Build wheels for CPython 3.9 (Linux and Windows)
      #   if: matrix.os != 'macos-latest'
      #   run: |
      #     python -m cibuildwheel --output-dir dist
      #   env:
      #     CIBW_BUILD: "cp39-*"
      #     CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      #     CIBW_MANYLINUX_I686_IMAGE: manylinux1
      #     # CIBW_BEFORE_BUILD: pip install certifi numpy==1.19.3
      #     # CIBW_TEST_REQUIRES: pytest pooch pytest-localserver pytest-faulthandler
      #     # CIBW_TEST_COMMAND: pytest --pyargs skimage

      # - name: Build wheels for CPython (MacOS)
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     brew install libomp
      #     python -m cibuildwheel --output-dir dist
      #   env:
      #     CIBW_BUILD: "cp3?-*"
      #     CIBW_SKIP: "cp35-* cp36-* cp39-*"
      #     CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      #     CIBW_MANYLINUX_I686_IMAGE: manylinux1
      #     # CIBW_BEFORE_BUILD: pip install certifi numpy==1.16
      #     CC: /usr/bin/clang
      #     CXX: /usr/bin/clang++
      #     CPPFLAGS: "-Xpreprocessor -fopenmp"
      #     CFLAGS: "-Wno-implicit-function-declaration -I/usr/local/opt/libomp/include"
      #     CXXFLAGS: "-I/usr/local/opt/libomp/include"
      #     LDFLAGS: "-Wl,-rpath,/usr/local/opt/libomp/lib -L/usr/local/opt/libomp/lib -lomp"
      #     # CIBW_TEST_REQUIRES: pytest pooch pytest-localserver pytest-faulthandler
      #     # CIBW_TEST_COMMAND: pytest --pyargs skimage


      - name: Build wheels for CPython (Linux and Windows)
        if: matrix.os != 'macos-latest'
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp3?-*"
          CIBW_SKIP: "cp35-* cp36-* cp39-* *-win32 *i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010
          # CIBW_BEFORE_BUILD: pip install certifi numpy==1.16
          # CIBW_BEFORE_TEST: python -m pip install --upgrade pip wheel setuptools pytest tensorflow
          CIBW_TEST_REQUIRES: pytest tensorflow
          CIBW_TEST_COMMAND: pytest -v --durations=50 -m "not gpu" {project}



      # - name: Build wheels for CPython 3.6
      #   run: |
      #     python -m cibuildwheel --output-dir dist
      #   env:
      #     CIBW_BUILD: "cp36-*"
      #     CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      #     CIBW_MANYLINUX_I686_IMAGE: manylinux1
      #     # CIBW_BEFORE_BUILD: pip install certifi numpy==1.16
      #   if: >
      #     startsWith(github.ref, 'refs/heads/v0.17') ||
      #     startsWith(github.ref, 'refs/tags/v0.17')

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl